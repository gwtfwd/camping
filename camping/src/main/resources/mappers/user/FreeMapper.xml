<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="kr.green.camping.dao.user.FreeMapper">

	
	<select id="getFreePage" resultType="kr.green.camping.vo.user.FreeVO">
		select * from free order by no desc limit #{pageStart}, #{perPageNum} 
	</select>
	
	<select id="getFreeByNo" resultType="kr.green.camping.vo.user.FreeVO">
		select * from free where no = #{no}
	</select>
	
	<insert id="writeFree">
		insert into free (subject, contents, registered_id, registered_at, name) values (#{subject}, #{contents}, #{registered_id}, now(), #{name})
	</insert>
	
	<update id="modifyFree">
		update free set subject=#{subject}, contents=#{contents} where no=#{no}
	</update>
	
	<delete id="deleteFree">
		delete from free where no = #{no}
	</delete>
	
	<update id="view">
		update free set view = view + 1 where no = #{no}
	</update>

	
	<!-- 검색 -->
	<select id="searchFree" resultType="kr.green.camping.vo.user.NoticeVO">
		select * from free
		where 1 = 1 
			<if test="type==1">
				 and subject like #{search}
			</if>
			<if test="type==2">
				 and contents like #{search}
			</if>
			<if test="type==3">
				 and name like #{search}
			</if>
			<if test="type==4">
				 and registered_id like #{search}
			</if>
		order by no desc
		limit
			#{cri.pageStart},#{cri.perPageNum}
	</select>
	
	<select id="getCountFree" resultType="java.lang.Integer">
		select
			count(no)
		from
			free
		where 1=1
			<if test="type==1">
				 and subject like #{search}
			</if>
			<if test="type==2">
				 and contents like #{search}
			</if>
			<if test="type==3">
				 and name like #{search}
			</if>
			<if test="type==3">
				 and id like #{search}
			</if>
	</select>
	
	
	<!-- 댓글 -->
	<!-- <insert id="insertReply" parameterType="kr.green.camping.vo.user.ReplyVO" >
	
		reno의 값이 null이면 0, null이 아니면 reno의 값+1 출력
	    <selectKey resultType="String" keyProperty="reno" order="BEFORE">
	        select ifnull(max(reno),0)+1 from reply
	    </selectKey>
	        
	    insert into reply(brdno, reno, reid, rememo, redate, redeleteflag) values (#{brdno}, #{reno}, #{reid}, #{rememo}, NOW(), 'N')
	    
	</insert>
	
	<update id="updateReply" parameterType="kr.green.camping.vo.user.ReplyVO">
	    update reply set rememo=#{rememo} where reno=#{reno}
	</update> --> 
	
	
	
	
	
	
	
	
	<select id="replyCount" resultType="int">
        select count(*) from reply where bno = #{bno}
    </select>
    
    <select id="replyList" resultType="kr.green.camping.vo.user.ReplyVO">
        select * from reply where bno = #{bno}
    </select>
    
    
    <insert id="replyInsert" parameterType="kr.green.camping.vo.user.ReplyVO">
        insert into reply (reno, bno, recontent, reid, redate) values(#{reno}, #{bno}, #{recontent}, #{reid}, now()) 
    </insert>
    
   <!--  <update id="replyUpdate" parameterType="kr.green.camping.vo.user.ReplyVO">
        update reply set recontent = #{recontent} where reno = #{reno}
    </update>
    
    <delete id="replyDelete" parameterType="int">
        delete from reply where reno = #{reno}
    </delete> -->


	
	
	
	
</mapper>